
#define BLYNK_PRINT Serial
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include "RTClib.h"
#include <Servo.h>
//#define ServoPin 14
RTC_DS1307 RTC;
RTC_DS3231 rtc;

Servo myservo;  // create servo object to control a servo

int foodlevel=4000;
int i;
int button = 16; // push button is connected
int temp = 0;    // temporary variable for reading the button pin status

// You should get Auth Token in the Blynk App.
// Go to the Project Settings (nut icon).
char auth[] = "c0da13b5a541449fa71d6a99c475874f";

// Your WiFi credentials.
// Set password to "" for open networks.
char ssid[] = "Free Wi-Fi";
char pass[] = "callofduty";


// Structure FoodMeal for 
struct FoodMeal{
    int Hour, Minute, Amount;
    
    FoodMeal(){
      Hour = 0;
      Minute = 0;
      Amount = 0;
    }
    
    bool operator == (FoodMeal f) {
      if (this->Hour == f.Hour && this->Minute == f.Minute) {
        return true;
      }
      return false;
    }
};

FoodMeal foodTime[32][3], FM1, FM2, FM3, currentTime;

int Day;
bool foodServed;

// Day Extract
BLYNK_WRITE(V0) {
  int pinValue = param.asInt(); // assigning incoming value from pin V1 to a variable
  Day = pinValue;
  //Serial.print("Day is: ");
  //Serial.print(Day);
  
}

//-------First Meal--------
// Hour, Minute Extract
BLYNK_WRITE(V1) {
  TimeInputParam t(param);
  FM1.Hour = t.getStartHour();
  FM1.Minute = t.getStartMinute();
  /*Serial.print("Time is: ");
  Serial.print(FM1.Hour);
  Serial.print(":");
  Serial.print(FM1.Minute);*/
  
}
// Amount Extract
BLYNK_WRITE(V2) {
  int pinValue = param.asInt(); // assigning incoming value from pin V1 to a variable
  FM1.Amount = pinValue;
  //Serial.print("Amount is: ");
  //Serial.print(FM1.Amount);
}
/*
//-------Second Meal--------
// Hour, Minute Extract
BLYNK_WRITE(V3) {
  TimeInputParam t(param);
  FM2.Hour = t.getStartHour();
  FM2.Minute = t.getStartMinute();
}
// Amount Extract
BLYNK_WRITE(V4) {
  int pinValue = param.asInt(); // assigning incoming value from pin V1 to a variable
  FM2.Amount = pinValue;
}

//-------Third Meal--------
// Hour, Minute Extract
BLYNK_WRITE(V5) {
  TimeInputParam t(param);
  FM3.Hour = t.getStartHour();
  FM3.Minute = t.getStartMinute();
}
// Amount Extract
BLYNK_WRITE(V6) {
  int pinValue = param.asInt(); // assigning incoming value from pin V1 to a variable
  FM3.Amount = pinValue;
}
*/

// Save Button
BLYNK_WRITE(V7) {
  int buttonState = param.asInt(); // assigning incoming value from pin V1 to a variable

  Serial.print("V7 Button value is: ");
  Serial.println(buttonState);
  if (buttonState == 1) {
    foodTime[Day][0] = FM1;
    //foodTime[Day][1] = FM2;
    //foodTime[Day][2] = FM3;
  Serial.print("Day is: ");
  Serial.println(Day);
  Serial.print("Time is: ");
  Serial.print(FM1.Hour);
  Serial.print(":");
  Serial.println(FM1.Minute);
  Serial.print("Amount is: ");
  Serial.println(FM1.Amount);
  }
  
}

// Instant Food Serve
BLYNK_WRITE(V8) {
  int buttonState = param.asInt(); // assigning incoming value from pin V1 to a variable
  if (buttonState == 1) {
    handleServo(1);
  }
  
}
// Clear alltime
BLYNK_WRITE(V9) {
  int buttonState = param.asInt(); // assigning incoming value from pin V1 to a variable
  struct FoodMeal tempFM;
  if (buttonState == 1) {
    foodTime[Day][0] = tempFM;
    //foodTime[Day][1] = tempFM;
    //foodTime[Day][2] = tempFM;
    Blynk.virtualWrite(V1,tempFM.Hour,tempFM.Minute,0);
  }
  
}


void handleServo(int amt) {
  myservo.write(180);   // tell servo to go to position
  delay(amt * 1000);
  myservo.write(0); 
}

void setup() {
  foodServed = false;
  Serial.begin(9600);
  
  myservo.attach(2); 
  myservo.write(0);
  RTC.begin();
  DateTime now = RTC.now();

  if (! RTC.isrunning()) {
    Serial.println("RTC is NOT running!");
    // Set the date and time at compile time
    RTC.adjust(DateTime(__DATE__, __TIME__));
  }
   //RTC.adjust(DateTime(__DATE__, __TIME__)); //removing "//" to adjust the time
    // The default display shows the date and time

  //Blynk.virtualWrite(V6, 4000);
  Blynk.begin(auth, ssid, pass);
  // You can also specify server:
  //Blynk.begin(auth, ssid, pass, "blynk-cloud.com", 80);
  //Blynk.begin(auth, ssid, pass, IPAddress(192,168,1,100), 8080);
  
  
  
}

void loop() {
    DateTime now = rtc.now();
    Serial.print("Day:");
    Serial.print(now.day(), DEC);
    Serial.print("   ");
    Serial.print("Time:");
    Serial.print(now.hour(), DEC);
    Serial.print(':');
    Serial.print(now.minute(), DEC);
    Serial.print(':');
    Serial.print(now.second(), DEC);
    Serial.println();
  currentTime.Hour = now.hour();
  currentTime.Minute = now.minute();
  temp = digitalRead(button);
      if (temp == HIGH) {
      handleServo(1);
       }
  
  if (now.second() == 0) {
      foodServed = false;
  }
  
  for (i = 0; i < 3; ++i) {
    if (foodTime[now.day()][i] == currentTime) {
      if (foodServed == false ) {
        // Call handle servo
        foodServed = true;
        handleServo(foodTime[now.day()][i].Amount);
      }
    }
  }
  
  Blynk.run();
  //delay(2000);
}
